<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Docker搭建个人博客--Halo和WordPress</title>
    <url>/yoon/97e6aa61.html</url>
    <content><![CDATA[<h2 id="1、Docker安装Halo与MySQL教程"><a href="#1、Docker安装Halo与MySQL教程" class="headerlink" title="1、Docker安装Halo与MySQL教程"></a>1、Docker安装Halo与MySQL教程</h2><p>用Docker安装个人博客的好处</p>
<p><a href="https://docs.halo.run/getting-started/install/other/docker-mysql">Halo官方文档</a></p>
<h3 id="0x00-创建-Docker-自定义桥接网络"><a href="#0x00-创建-Docker-自定义桥接网络" class="headerlink" title="0x00 创建 Docker 自定义桥接网络"></a>0x00 创建 Docker 自定义桥接网络</h3><p><code>docker network create halo-net</code></p>
<h3 id="0x01-拉取-MySQL-镜像"><a href="#0x01-拉取-MySQL-镜像" class="headerlink" title="0x01 拉取 MySQL 镜像"></a>0x01 拉取 <code>MySQL</code> 镜像</h3><p><code>docker pull mysql:8.0.27</code></p>
<h3 id="0x02-创建-MySQL-数据目录"><a href="#0x02-创建-MySQL-数据目录" class="headerlink" title="0x02 创建 MySQL 数据目录"></a>0x02 创建 <code>MySQL</code> 数据目录</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@yoon ~]<span class="comment"># mkdir -p ~/.halo/mysql</span></span><br><span class="line">[root@yoon ~]<span class="comment"># rootdocker run --name halo-mysql -v ~/.halo/mysql:/var/lib/mysql -p 3307:33077 -e MYSQL_ROOT_PASSWORD=123456 --net halo-net --restart=unless-stopped -d mysql:8.0.27</span></span><br></pre></td></tr></table></figure>

<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">释义</span></span><br><span class="line"><span class="string">-e</span> <span class="string">MYSQL_ROOT_PASSWORD=123455:</span> <span class="string">指定MySQL的登录密码为</span> <span class="number">123456</span></span><br><span class="line"><span class="string">-v</span> <span class="string">~/.halo/mysql:/var/lib/mysql</span> <span class="string">命令:</span> <span class="string">将宿主机的目录</span> <span class="string">~/.halo/mysql</span> <span class="string">挂载到容器内部的目录</span> <span class="string">/var/lib/mysql，默认情况下</span> <span class="string">MySQL</span> <span class="string">将向</span> <span class="string">~/.halo/mysql</span> <span class="string">写入其数据文件。</span></span><br><span class="line"><span class="string">--net</span> <span class="attr">halo-net:</span> <span class="string">将该容器加入到</span> <span class="string">halo-net</span> <span class="string">网络,连接到</span> <span class="string">halo-net</span> <span class="string">网络的任何其他容器都可以访问</span> <span class="string">halo-mysql容器上的所有端口。</span></span><br><span class="line"><span class="string">-p</span> <span class="number">3307</span><span class="string">:33077</span> <span class="string">将docker的33077端口映射到主机的3307端口</span></span><br></pre></td></tr></table></figure>

<span id="more"></span>

<h3 id="0x03-进入-MySQL-容器中登录-MySQL-并创建-Halo-需要的数据库"><a href="#0x03-进入-MySQL-容器中登录-MySQL-并创建-Halo-需要的数据库" class="headerlink" title="0x03 进入 MySQL 容器中登录 MySQL 并创建 Halo 需要的数据库"></a>0x03 进入 MySQL 容器中登录 MySQL 并创建 Halo 需要的数据库</h3><ul>
<li>(1) halo-mysql 为 MySQL 实例的容器名称</li>
</ul>
<p>进入halo-mysql容器</p>
<p><code>docker exec -it halo-mysql /bin/bash</code></p>
<p>修改&#x2F;etc&#x2F;mysql&#x2F;my.cnf</p>
<p>① 首先测试容器是否有vim或者vi命令</p>
<p><img src="http://r9ny81buh.hn-bkt.clouddn.com/blog/20200702173145766.png" alt="七牛"></p>
<p>在图中可看到无vim包，<font color="red">apt-get换源下载vim</font>，国内访问镜像站实在是太慢了，所以需要换源，但是因为无法编辑文件，所以需要绕一下。因为该源是不用GPG验证的，可能不安全，但因为docker容器没有验证GPG的工具所以只能先用这个源，最后再换回正式源。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">复制原文件备份</span></span><br><span class="line">mv /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改sources.list</span></span><br><span class="line">cat &lt;&lt;EOF &gt;/etc/apt/sources.list</span><br><span class="line">deb http://mirrors.ustc.edu.cn/debian stable main contrib non-free</span><br><span class="line">deb http://mirrors.ustc.edu.cn/debian stable-updates main contrib non-free</span><br><span class="line">EOF</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">更新apt</span></span><br><span class="line">apt update</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装vim命令</span></span><br><span class="line">apt install vim</span><br><span class="line"><span class="meta prompt_"> </span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">还原sources.list文件</span></span><br><span class="line">mv /etc/apt/sources.list.bak /etc/apt/sources.list</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">修改mysql端口号</span></span><br><span class="line">vim /etc/mysql/my.cnf</span><br></pre></td></tr></table></figure>

<p><img src="http://r9ny81buh.hn-bkt.clouddn.com/blog/image-20220331165036530.png"></p>
<p>修改后的docker中mysql端口号为33077</p>
<p>重启mysql</p>
<p><code>docker restart halo-mysql</code></p>
<p>使用<font color="red"><code>dcoker logs docker_name</code></font>可以查看docker日志</p>
<ul>
<li>(2) 登录 MySQL</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure>

<ul>
<li>(3) 输入 MySQL 数据库密码</li>
<li>(4) 创建数据库</li>
</ul>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#查看端口号</span><br><span class="line">show global variables like &#x27;port&#x27;;</span><br><span class="line">create database halodb character set utf8mb4 collate utf8mb4_bin;</span><br></pre></td></tr></table></figure>

<p><img src="http://r9ny81buh.hn-bkt.clouddn.com/blog/image-20220331170436689.png"></p>
<p><font color="greem">使用Navicat测试能否连接IP:3307的数据库</font></p>
<ul>
<li>(5) 使用 <code>exit</code>退出<code>MySQL</code> 并退出容器</li>
</ul>
<h3 id="0x04-创建-Halo-工作目录"><a href="#0x04-创建-Halo-工作目录" class="headerlink" title="0x04 创建 Halo 工作目录"></a>0x04 创建 <code>Halo</code> 工作目录</h3><p><code>mkdir ~/.halo &amp;&amp; cd ~/.halo</code></p>
<h3 id="0x05-下载示例配置文件到工作目录"><a href="#0x05-下载示例配置文件到工作目录" class="headerlink" title="0x05 下载示例配置文件到工作目录"></a>0x05 下载示例配置文件到<a href="https://docs.halo.run/getting-started/prepare#%E5%B7%A5%E4%BD%9C%E7%9B%AE%E5%BD%95">工作目录</a></h3> <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget https://dl.halo.run/config/application-template.yaml -O ./application.yaml</span><br></pre></td></tr></table></figure>

<h3 id="0x06-编辑配置文件，配置数据库，其他配置请参考参考配置"><a href="#0x06-编辑配置文件，配置数据库，其他配置请参考参考配置" class="headerlink" title="0x06 编辑配置文件，配置数据库，其他配置请参考参考配置"></a>0x06 编辑配置文件，配置数据库，其他配置请参考<a href="https://docs.halo.run/getting-started/config">参考配置</a></h3><p><code>vim application.yaml</code></p>
<p>你需要做如下几个步骤：</p>
<ul>
<li>注释 H2 database configuration.部分</li>
<li>启用 MySQL database configuration.部分</li>
<li>修改 datasource 下的 url 中的 ip 地址部分为容器名称并修改密码为您设定的 <code>MySQL</code> 密码</li>
</ul>
<p>修改后的内容如下:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">spring:</span></span><br><span class="line">  <span class="attr">datasource:</span></span><br><span class="line">    <span class="attr">driver-class-name:</span> <span class="string">com.mysql.cj.jdbc.Driver</span></span><br><span class="line">    <span class="attr">url:</span> <span class="string">jdbc:mysql://halo-mysql:3307/halodb?characterEncoding=utf8&amp;useSSL=false&amp;serverTimezone=Asia/Shanghai&amp;allowPublicKeyRetrieval=true</span></span><br><span class="line">    <span class="attr">username:</span> <span class="string">root</span></span><br><span class="line">    <span class="attr">password:</span> <span class="number">123456</span></span><br></pre></td></tr></table></figure>

<h3 id="0x07-创建Halo容器实例"><a href="#0x07-创建Halo容器实例" class="headerlink" title="0x07 创建Halo容器实例"></a>0x07 创建Halo容器实例</h3><p><code>docker run -it -d --name halo -p 8090:8090 -v ~/.halo:/root/.halo --net halo-net --restart=unless-stopped halohub/halo:1.5.1</code></p>
<h3 id="0x08-打开-http-ip-端口号-即可看到安装引导界面"><a href="#0x08-打开-http-ip-端口号-即可看到安装引导界面" class="headerlink" title="0x08 打开 http://ip:端口号 即可看到安装引导界面"></a>0x08 打开 <code>http://ip:端口号</code> 即可看到安装引导界面</h3><p><img src="http://r9ny81buh.hn-bkt.clouddn.com/blog/image-20220331171010252.png"></p>
<h3 id="0x09-如果有域名，可以使用-Caddy-进行反向代理"><a href="#0x09-如果有域名，可以使用-Caddy-进行反向代理" class="headerlink" title="0x09 如果有域名，可以使用 Caddy 进行反向代理"></a>0x09 如果有域名，可以使用 Caddy 进行反向代理</h3><h4 id="1、安装caddy"><a href="#1、安装caddy" class="headerlink" title="1、安装caddy"></a>1、安装caddy</h4><p>caddy目前是不支持centos8的，所以我的服务器版本是centos 7.6</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">安装 Caddy 软件包，-y代表下载过程不询问</span></span><br><span class="line">yum install caddy -y</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">下载 Halo 官方的 Caddy 配置模板</span></span><br><span class="line">curl -o /etc/caddy/conf.d/Caddyfile.conf --create-dirs https://dl.halo.run/config/Caddyfile</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">使用 vim 编辑 Caddyfile</span></span><br><span class="line">vim /etc/caddy/conf.d/Caddyfile.conf</span><br></pre></td></tr></table></figure>

<p>Caddyfile.conf模板如下：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">https://www.simple.com</span> &#123;</span><br><span class="line"> <span class="string">gzip</span></span><br><span class="line"> <span class="string">tls</span> <span class="string">xxxx@xxx.xx</span></span><br><span class="line"> <span class="string">proxy</span> <span class="string">/</span> <span class="string">localhost:port</span> &#123;</span><br><span class="line">  <span class="string">transparent</span></span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<ol>
<li>把 <a href="https://www.simple.com/">https://www.simple.com</a> 改为自己的域名，即自己申请的域名。</li>
<li>tls 后面的 <a href="mailto:&#120;&#120;&#120;&#x78;&#x40;&#x78;&#120;&#x78;&#x2e;&#120;&#120;">&#120;&#120;&#120;&#x78;&#x40;&#x78;&#120;&#x78;&#x2e;&#120;&#120;</a> 改为自己的邮箱地址，这是用于自动申请 SSL 证书用的。需要注意的是，不需要你自己配置 SSL 证书，而且会自动帮你续签。</li>
<li>localhost:port 请将 port 修改为 Halo 的运行端口，默认为 8090。</li>
</ol>
<h4 id="2、修改完成后启动Caddy服务"><a href="#2、修改完成后启动Caddy服务" class="headerlink" title="2、修改完成后启动Caddy服务"></a>2、修改完成后启动Caddy服务</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">开启自启 Caddy 服务</span></span><br><span class="line">systemctl enable caddy</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动 Caddy</span></span><br><span class="line">service caddy start</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">停止运行 Caddy</span></span><br><span class="line">service caddy stop</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启 Caddy</span></span><br><span class="line">service caddy restart</span><br></pre></td></tr></table></figure>

<p>到这里，关于 Caddy 反向代理的配置也就完成了，现在你可以访问一下自己的域名，并进行 Halo 的初始化了。<br>如果访问不了，可能是80号端口被占用了，查看一下80号端口使用情况。<br>要注意一点是博客地址应改为你的域名地址，否则会造成资源获取不成功。</p>
<p>直接用域名访问Halo即可。</p>
<p><a href="https://halo.run/themes.html">Halo主题仓库</a></p>
<h2 id="2、Wordpress安装"><a href="#2、Wordpress安装" class="headerlink" title="2、Wordpress安装"></a>2、Wordpress安装</h2><p><a href="https://blog.csdn.net/xiadeliang1111/article/details/106410886?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-0.pc_relevant_paycolumn_v3&spm=1001.2101.3001.4242.1&utm_relevant_index=2">参考博客</a></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">先创建MySQL</span></span><br><span class="line">[root@yoon ~] docker run --name halo-mysql -v ~/.halo/mysql:/var/lib/mysql -p 3307:33077 -e MYSQL_ROOT_PASSWORD=123456 --net halo-net --restart=unless-stopped -d mysql:8.0.27</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">进入到MySQL容器中</span></span><br><span class="line">[root@yoon ~] docker exec -it halo-mysql /bin/bash</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">创建wordpress数据库</span></span><br><span class="line"><span class="meta prompt_">mysql&gt; </span><span class="language-bash">create database wordpress;</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">再创建wordpress，MySQL和wordpress在同一个网络内</span></span><br><span class="line">[root@yoon ~] docker run --name wordpress -p 8000:80 --net halo-net --restart=unless-stopped -e WORDPRESS_DB_USER=root -e WORDPRESS_DB_PASSWORD=123456 -e WORDPRESS_DB_NAME=wordpress -d wordpress</span><br></pre></td></tr></table></figure>

<p>输入IP:8000即可访问wordpress</p>
<h2 id="3、oneinstack安装Nginx多域名配置"><a href="#3、oneinstack安装Nginx多域名配置" class="headerlink" title="3、oneinstack安装Nginx多域名配置"></a>3、oneinstack安装Nginx多域名配置</h2><p><a href="https://docs.halo.run/getting-started/install/other/oneinstack">参考链接</a></p>
]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
        <tag>blog</tag>
      </tags>
  </entry>
  <entry>
    <title>设计模式之单一职责原则</title>
    <url>/yoon/c32feb96.html</url>
    <content><![CDATA[<h3 id="1、概念"><a href="#1、概念" class="headerlink" title="1、概念"></a>1、概念</h3>]]></content>
      <categories>
        <category>设计模式</category>
      </categories>
      <tags>
        <tag>设计模式</tag>
        <tag>单一职责原则</tag>
      </tags>
  </entry>
</search>
